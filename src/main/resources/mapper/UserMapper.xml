<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hotel.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.hotel.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 30 22:25:08 GMT 2024.
    -->
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_type" jdbcType="TINYINT" property="userType" />
    <result column="member_ship" jdbcType="TINYINT" property="memberShip" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 30 22:25:08 GMT 2024.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 30 22:25:08 GMT 2024.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 30 22:25:08 GMT 2024.
    -->
    id, user_id, email, phone, user_name, password, user_type, member_ship, salt
  </sql>
  <select id="selectByExample" parameterType="com.example.hotel.entity.UserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 30 22:25:08 GMT 2024.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.hotel.entity.UserExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 30 22:25:08 GMT 2024.
    -->
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.hotel.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 30 22:25:08 GMT 2024.
    -->
    insert into user (id, user_id, email, 
      phone, user_name, password, 
      user_type, member_ship, salt
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userType,jdbcType=TINYINT}, #{memberShip,jdbcType=TINYINT}, #{salt,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.hotel.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 30 22:25:08 GMT 2024.
    -->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="memberShip != null">
        member_ship,
      </if>
      <if test="salt != null">
        salt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=TINYINT},
      </if>
      <if test="memberShip != null">
        #{memberShip,jdbcType=TINYINT},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.hotel.entity.UserExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 30 22:25:08 GMT 2024.
    -->
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 30 22:25:08 GMT 2024.
    -->
    update user
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=VARCHAR},
      </if>
      <if test="row.email != null">
        email = #{row.email,jdbcType=VARCHAR},
      </if>
      <if test="row.phone != null">
        phone = #{row.phone,jdbcType=VARCHAR},
      </if>
      <if test="row.userName != null">
        user_name = #{row.userName,jdbcType=VARCHAR},
      </if>
      <if test="row.password != null">
        password = #{row.password,jdbcType=VARCHAR},
      </if>
      <if test="row.userType != null">
        user_type = #{row.userType,jdbcType=TINYINT},
      </if>
      <if test="row.memberShip != null">
        member_ship = #{row.memberShip,jdbcType=TINYINT},
      </if>
      <if test="row.salt != null">
        salt = #{row.salt,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Oct 30 22:25:08 GMT 2024.
    -->
    update user
    set id = #{row.id,jdbcType=BIGINT},
      user_id = #{row.userId,jdbcType=VARCHAR},
      email = #{row.email,jdbcType=VARCHAR},
      phone = #{row.phone,jdbcType=VARCHAR},
      user_name = #{row.userName,jdbcType=VARCHAR},
      password = #{row.password,jdbcType=VARCHAR},
      user_type = #{row.userType,jdbcType=TINYINT},
      member_ship = #{row.memberShip,jdbcType=TINYINT},
      salt = #{row.salt,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

    <sql id="normal">0</sql>
    <sql id="ban">1</sql>
    <sql id="deleted">2</sql>

    <select id="findByRoleId" resultType="com.example.hotel.entity.User">
      SELECT
          t.id,
          t.user_name,
          t.user_display_name,
          t.user_pass,
          t.id_card,
          t.user_avatar,
          t.user_desc,
          t.login_last,
          t.status,
          t.create_time
      FROM
          user_role_ref r,
          user t
      WHERE
          r.role_id = #{roleId} AND
          r.user_id = t.id
          AND t.del_flag = 0
          AND r.del_flag = 0
      ORDER BY
          t.id DESC
  </select>

    <select id="findByRoleIdAndCondition" resultType="com.example.hotel.entity.User">
        SELECT
        t.id,
        t.user_name,
        t.user_display_name,
        t.user_pass,
        t.id_card,
        t.user_avatar,
        t.user_desc,
        t.login_last,
        t.status,
        t.create_time
        FROM
        user_role_ref r,
        user t
        WHERE
        t.del_flag = 0 AND
        r.del_flag = 0 AND
        r.role_id = #{roleId} AND
        r.user_id = t.id
        <if test="user.status != null and user.status != ''">
            AND t.status = #{user.status}
        </if>
        <if test="user.userName != null and user.userName != ''">
            AND t.user_name LIKE CONCAT('%', #{user.userName}, '%')
        </if>
        <if test="user.userDisplayName != null and user.userDisplayName != ''">
            AND t.user_display_name LIKE CONCAT('%', #{user.userDisplayName}, '%')
        </if>
        <if test="user.idCard != null and user.idCard != ''">
            AND t.id_card LIKE CONCAT('%', #{user.idCard}, '%')
        </if>
        ORDER BY
        t.id DESC
    </select>


    <select id="findByCondition" resultType="com.example.hotel.entity.User">
        SELECT
        t.id,
        t.user_name,
        t.user_display_name,
        t.user_pass,
        t.id_card,
        t.user_avatar,
        t.user_desc,
        t.login_last,
        t.status,
        t.create_time
        FROM
        user t
        WHERE
        t.del_flag = 0
        <if test="user.status != null and user.status != ''">
            AND t.status = #{user.status}
        </if>
        <if test="user.userName != null and user.userName != ''">
            AND t.user_name LIKE CONCAT('%', #{user.userName}, '%')
        </if>
        <if test="user.userDisplayName != null and user.userDisplayName != ''">
            AND t.user_display_name LIKE CONCAT('%', #{user.userDisplayName}, '%')
        </if>
        <if test="user.idCard != null and user.idCard != ''">
            AND t.id_card LIKE CONCAT('%', #{user.idCard}, '%')
        </if>
        ORDER BY
        t.id DESC
    </select>


    <select id="getTodayCount" resultType="java.lang.Integer">
        SELECT
            count( * )
        FROM
            post
        WHERE
            to_days( create_time ) = to_days( now( ) )
            AND del_flag = 0
    </select>

    <select id="getUserPostRanking" resultType="com.example.hotel.entity.User">
        SELECT
            count( * ) postCount,
            u.id,
            u.user_name,
            u.user_avatar,
            u.user_display_name,
            u.login_last,
            u.create_time
        FROM
            post p,
            user u
        WHERE
            p.user_id = u.id
            AND p.del_flag = 0
            AND u.del_flag = 0
        GROUP BY
            p.user_id
        ORDER BY
            postCount DESC
            LIMIT #{value}
    </select>

    <select id="getLatestUser" resultType="com.example.hotel.entity.User">
        SELECT
            id,
            user_name,
            user_avatar,
            user_display_name,
            create_time
        FROM
            user
        WHERE
            del_flag = 0
        ORDER BY
            create_time DESC
            LIMIT #{value}
    </select>

    <select id="getHotUsers" resultType="com.example.hotel.entity.User">
        SELECT
            u.id,
            u.user_name,
            u.user_avatar,
            u.user_display_name,
            ( SELECT count( * ) FROM post p WHERE p.user_id = u.id ) postCount
        FROM
            USER u
        ORDER BY
            postCount DESC
    </select>
</mapper>